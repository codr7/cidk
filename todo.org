* fix fib_iter
** add set op 
*** int/sym support like let
*** expr support like poke
** add for op
*** add function<Val (Val in)> iter to ValType
*** add function<bool (Val in, Val &out)> pop to ValType
**** implement as dec for int
**** use to iterate loop
* --
* move Def.cx to Type
* add @ char reader
** read utf8
* add Splat op
** vararg like Push
** call splat on eval
* add len op
** forward to type env
** add Str/List/Env.len funs
* add stack type inference
** add Fun.rets (Rets)
** process stack in compile
** add Undef type
*** store actual as_type
** add unify(Stack &x, Stack &y)
** use to pick fn at read-time in BinOp
* push Fun on stack from Defun if missing id
* add Fun arg type checking
** skip args with type A
* add Quote type
** struct with embedded Val
** add '-reader
* add Splice support
** splice list items automagically
* add mod op like mul
** add math/int_mod

fun (fib (n Int) Int
  if n.< 2 n fib(n.- 1).+ fib(n.- 2)
)

fun (fib ((n a b) Int) Int
  if n.= 0 a if n.= 1 b fib(n.- 1 b a.+ b)
)

