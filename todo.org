* add test bench
** add test/abc/str/env.al
** bench 10x in run.al
* add Char type
** char32_t
** add \", \\ and \n consts
* implement Str splat
* add ReadState stack & Env args to load
** pass between loaded files in main
** forward args in include-op

* add Env.add_const_expr construct expr from op args & bind const
** replaces macro
* add fib_iter bench
** add set op
** add expr support like poke
* remove Env/Def.cx
** pass args instead
* simplify read_eop()
** use skip_ws/get/unget instead
* remove typed Val constructor Pos arg
* add div op like mul
** add math/int_div
* add mod op like mul
** add math/int_mod
* add stack type inference
** add Fun.rets (Rets)
** process stack in OpType inits
** add cx, env, stack to OpType inits / op constructor
** add Undef type
*** store actual as_type
** add unify(Stack &x, Stack &y)
** use to lookup fn at read-time in BinOp
* push Fun on stack from Defun if missing id
* add Fun arg type checking
** skip args with type A
* add Quote type
** struct with embedded Val
** add '-reader
* add Splice support
** splice list items automagically
* add len op
** forward to type env
** add Str/List/Env.len funs


