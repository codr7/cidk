* add 'const id val' op
** use add_const
* add is/eq ops
** ==/=
* mark call stack funs in cx.mark()
* bench/fib_rec.al
** add Bench op
*** i & j for outer/inner loop
* enable mem pools & compare
* add fib_tail from snigl
* --
* add env.update(is, function<void>(Val &))
** use setter (set-X in current env) if available
* add 'include' op
** vararg like 'call'
** load ops on read and store in data
** eval on eval
* add Quote type
** struct with embedded Val
** add '-reader
* add ListType.clone override
** only clone list structure
* add ValType.eq/clone & forward default like dump
** add List eq
* add Fun.args (Args)
** init arg ids
* add Fun.rets (Rets)
* finish Fun dump
* switch Env.get to return optional<Val>
* move ValType.splat to env
** update Val.splat()
** add Splat op
* derive Int from Num
* add lambda support
** &{...}
** anonymous Fun
* add mark/sweep ops
* --
* add Char type
** char32_t
* add Str type
** read as utf-8
*** https://stackoverflow.com/questions/16208079/how-to-work-with-utf-8-in-c-conversion-from-other-encodings-to-utf-8
** splat chars
* add >
** default using lt
