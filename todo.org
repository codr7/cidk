* skip fun env copy unless used
** add bool OpType.modifies_env
*** set in const/fun/macro types
*** check in fun body when read
*** set Fun.modifies_env
**** use in Call to trigger copy
* ---
* add stack accessor like env
** op + macro
** push as list & move items
* add fib_tail from snigl
* mark call stack funs in cx.mark()
* --
* add mark/sweep ops
* add repl
** launch if no args
** only eval if last char is ;
** clear stack on empty input
* add Fun.args (Args)
** init arg ids
* add Fun.rets (Rets)
* --
* add >
** default using lt
* add env.update(is, function<void>(Val &))
** use setter (set-X in current env) if available
* add 'include' op
** vararg like 'call'
** load ops on read and store in data
** eval on eval
* add Quote type
** struct with embedded Val
** add '-reader
* add Splat op
* add lambda support
** &{...}
** anonymous Fun
* add Char type
** char32_t
* add Str type
** read as utf-8
*** https://stackoverflow.com/questions/16208079/how-to-work-with-utf-8-in-c-conversion-from-other-encodings-to-utf-8
** splat chars
* add optional dup op offs arg
* add optional swap op offs arg
* add drop op nvals arg

