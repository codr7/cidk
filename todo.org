* rename dup op to cp
** rename Val/ValType.dup to cp
** add (offs=0 len=1) args
** add to readme
* add Expr support to poke op
** eval with prev val rotated to end & rotate back
** add poke to readme
* add 'include' op
** vararg like 'call'
** load ops on read and store in data
** eval on eval
* add test bench
** add test/abc.al
** bench 10x in run.al
* add fib_iter bench
** add set op
* add stack type inference
** process stack in OpType inits
** add cx, env, stack to OpType inits / op constructor
** add Undef type
*** store actual as_type
** add unify(Stack &x, Stack &y)
** use to lookup fn at read-time in BinOp
* push Fun on stack from Defun if missing id
* add Fun arg type checking
** skip args with type A
* add Quote type
** struct with embedded Val
** add '-reader
* add Splice support
** splice list items automagially
* add Char type
** char32_t
* add Str type
** read as utf-8
*** https://stackoverflow.com/questions/16208079/how-to-work-with-utf-8-in-c-conversion-from-other-encodings-to-utf-8
** splat chars
* add Fun.rets (Rets)

defun fib(_ Int)(Int) {
  if {dup; push 2; lt;} _ {
    dec; dup;
    call fib;
    swap; dec; 
    call fib;
    add;
  };
};
